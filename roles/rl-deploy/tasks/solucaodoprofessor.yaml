
#modulo stat verifica se arquivo existe e retorna  true ou  false. Armazena na variaval vhost.
- name: verificando o container que estah no ar
  stat: 
    path: /etc/ngnix/sites-enabled/green.conf 
  register: vhost

# deploy-bluegreen  Ã© o nome do projeto jenkins
- name: copiando a index do green 
  copy:
    src:  /var/lib/jenkins/workspace/deploy-bluegreen/index.html 
    dest: /srv/vol_green/index.html
# false porque copia green quando ele nao estiver la. Eh a troca do container
  when: vhost.stat.exists == False


- name: copiando a index do blue 
  copy:
    src:  /var/lib/jenkins/workspace/deploy-bluegreen/index.html 
    dest: /srv/vol_blue/index.html
# cria o blue quando o green estiver no ar 
  when: vhost.stat.exists ==  True

- name: pegando o ip address do container green 
  shell: "docker exec container_green hostname -I"
  when: vhost.stat.exists == False
  register: ipgreen    


- name: pegando o ip address do container blue 
  shell: "docker exec container_blue hostname -I"
  when: vhost.stat.exists == True
  register: ipblue    


- name: criando o vhost do green 
  template: 
    src: templates/vhost_green 
    dest: /etc/nginx/sites-enabled/green.conf
  when: vhost.stat.exists == False


- name: criando o vhost do blue 
  template: 
    src: templates/vhost_blue
    dest: /etc/nginx/sites-enabled/blue.conf
  when: vhost.stat.exists == True

- name: apagando o arquivo vhosts do  ambiente green (somente quando ja estiver no ar!!) 
  file: 
    path: /etc/nginx/sites-enabled/green.conf
    state: absent
  when: vhost.stat.exists == True


- name: apagando o arquivo vhost do  ambiente blue  (somente quando blue estiver no ar) 
  file: 
    path: /etc/nginx/sites-enabled/blue.conf
    state: absent
  when: vhost.stat.exists == False


- name: realizando o restart do nginx (poderia usar um handler que faz restart quando apagar o arquivo) 
  service: 
    name: nginx
    state: restarted 






